"use strict";(self.webpackChunkmajulahsingapuri_github_io=self.webpackChunkmajulahsingapuri_github_io||[]).push([[6829],{3430:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var s=i(4848),t=i(8453);const a={id:"settings-allauth",title:"Allauth",description:"Different Settings for Dj-Ninja-Auth",sidebar_position:5,sidebar_label:"Allauth",keywords:["settings","dj-ninja-auth"],image:"https://github.com/majulahsingapuri.png",tags:["dj-ninja-auth","settings"],slug:"allauth",draft:!1},o=void 0,d={id:"settings/settings-allauth",title:"Allauth",description:"Different Settings for Dj-Ninja-Auth",source:"@site/ninja-auth/settings/settings-allauth.md",sourceDirName:"settings",slug:"/settings/allauth",permalink:"/ninja-auth/settings/allauth",draft:!1,unlisted:!1,tags:[{inline:!0,label:"dj-ninja-auth",permalink:"/ninja-auth/tags/dj-ninja-auth"},{inline:!0,label:"settings",permalink:"/ninja-auth/tags/settings"}],version:"current",sidebarPosition:5,frontMatter:{id:"settings-allauth",title:"Allauth",description:"Different Settings for Dj-Ninja-Auth",sidebar_position:5,sidebar_label:"Allauth",keywords:["settings","dj-ninja-auth"],image:"https://github.com/majulahsingapuri.png",tags:["dj-ninja-auth","settings"],slug:"allauth",draft:!1},sidebar:"tutorialSidebar",previous:{title:"JWT",permalink:"/ninja-auth/settings/jwt"}},r={},c=[{value:"<code>ACCOUNT_ADAPTER</code>",id:"account_adapter",level:2},{value:"<code>ACCOUNT_AUTHENTICATION_METHOD</code>",id:"account_authentication_method",level:2},{value:"<code>ACCOUNT_CHANGE_EMAIL</code>",id:"account_change_email",level:2},{value:"<code>ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS</code>",id:"account_email_confirmation_expire_days",level:2},{value:"<code>ACCOUNT_EMAIL_CONFIRMATION_HMAC</code>",id:"account_email_confirmation_hmac",level:2},{value:"<code>ACCOUNT_EMAIL_NOTIFICATIONS</code>",id:"account_email_notifications",level:2},{value:"<code>ACCOUNT_EMAIL_REQUIRED</code>",id:"account_email_required",level:2},{value:"<code>ACCOUNT_EMAIL_VERIFICATION</code>",id:"account_email_verification",level:2},{value:"<code>ACCOUNT_EMAIL_SUBJECT_PREFIX</code>",id:"account_email_subject_prefix",level:2},{value:"<code>ACCOUNT_EMAIL_MAX_LENGTH</code>",id:"account_email_max_length",level:2},{value:"<code>ACCOUNT_MAX_EMAIL_ADDRESSES</code>",id:"account_max_email_addresses",level:2},{value:"<code>ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE</code>",id:"account_logout_on_password_change",level:2},{value:"<code>ACCOUNT_LOGIN_ON_PASSWORD_RESET</code>",id:"account_login_on_password_reset",level:2},{value:"<code>ACCOUNT_LOGOUT_REDIRECT_URL</code>",id:"account_logout_redirect_url",level:2},{value:"<code>ACCOUNT_PASSWORD_RESET_TOKEN_GENERATOR</code>",id:"account_password_reset_token_generator",level:2},{value:"<code>ACCOUNT_PRESERVE_USERNAME_CASING</code>",id:"account_preserve_username_casing",level:2},{value:"<code>ACCOUNT_PREVENT_ENUMERATION</code>",id:"account_prevent_enumeration",level:2},{value:"<code>ACCOUNT_RATE_LIMITS</code>",id:"account_rate_limits",level:2},{value:"<code>ACCOUNT_REAUTHENTICATION_TIMEOUT</code>",id:"account_reauthentication_timeout",level:2},{value:"<code>ACCOUNT_USERNAME_BLACKLIST</code>",id:"account_username_blacklist",level:2},{value:"<code>ACCOUNT_UNIQUE_EMAIL</code>",id:"account_unique_email",level:2},{value:"<code>ACCOUNT_USER_DISPLAY</code>",id:"account_user_display",level:2},{value:"<code>ACCOUNT_USER_MODEL_EMAIL_FIELD</code>",id:"account_user_model_email_field",level:2},{value:"<code>ACCOUNT_USER_MODEL_USERNAME_FIELD</code>",id:"account_user_model_username_field",level:2},{value:"<code>ACCOUNT_USERNAME_MIN_LENGTH</code>",id:"account_username_min_length",level:2},{value:"<code>ACCOUNT_USERNAME_VALIDATORS</code>",id:"account_username_validators",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.admonition,{type:"danger",children:[(0,s.jsx)(n.p,{children:"Some of the settings below have not been implemented or tested. Modifying the settings might alter the authentication flow in unexpected ways. Do so at your own peril. If you wish to contribute to the project, please write test cases to ensure that the code runs reliably or implement the missing settings flags in the relevant part of the code."}),(0,s.jsx)(n.p,{children:"Some of Allauth's settings have been omitted as they are either a client-side flow (e.g. redirect on authentication) or are not REST-ful (e.g. template extension)."})]}),"\n",(0,s.jsx)(n.h2,{id:"account_adapter",children:(0,s.jsx)(n.code,{children:"ACCOUNT_ADAPTER"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:'"allauth.account.adapter.DefaultAccountAdapter"'})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"str"})]}),"\n",(0,s.jsx)(n.p,{children:"description: Specifies the adapter class to use, allowing you to alter certain\ndefault behaviour."}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["Please change this to ",(0,s.jsx)(n.code,{children:'"dj_ninja_auth.registration.adapter.NinjaAccountAdapter"'})," or your own implementation that subclasses the Ninja Adapter else your email verification won't work."]})}),"\n",(0,s.jsx)(n.h2,{id:"account_authentication_method",children:(0,s.jsx)(n.code,{children:"ACCOUNT_AUTHENTICATION_METHOD"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:'"username"'}),", alternatives: ",(0,s.jsx)(n.code,{children:'"email"'})," or ",(0,s.jsx)(n.code,{children:'"username_email"'})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"str"})]}),"\n",(0,s.jsxs)(n.p,{children:["description: Specifies the login method to use -- whether the user logs in by\nentering their username, email address, or either one of both.\nSetting this to ",(0,s.jsx)(n.code,{children:'"email"'})," requires ",(0,s.jsx)(n.code,{children:"ACCOUNT_EMAIL_REQUIRED=True"})]}),"\n",(0,s.jsx)(n.h2,{id:"account_change_email",children:(0,s.jsx)(n.code,{children:"ACCOUNT_CHANGE_EMAIL"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"False"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"bool"})]}),"\n",(0,s.jsxs)(n.p,{children:["description: When disabled (",(0,s.jsx)(n.code,{children:"False"}),"), users can add one or more email addresses (up to a\nmaximum of ",(0,s.jsx)(n.code,{children:"ACCOUNT_MAX_EMAIL_ADDRESSES"}),") to their account and freely manage\nthose email addresses. When enabled (",(0,s.jsx)(n.code,{children:"True"}),"), users are limited to having\nexactly one email address that they can change by adding a temporary second\nemail address that, when verified, replaces the current email address."]}),"\n",(0,s.jsx)(n.h2,{id:"account_email_confirmation_expire_days",children:(0,s.jsx)(n.code,{children:"ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"3"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"int"})]}),"\n",(0,s.jsx)(n.p,{children:"description: Determines the expiration date of email confirmation mails (# of days)."}),"\n",(0,s.jsx)(n.h2,{id:"account_email_confirmation_hmac",children:(0,s.jsx)(n.code,{children:"ACCOUNT_EMAIL_CONFIRMATION_HMAC"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"True"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"bool"})]}),"\n",(0,s.jsx)(n.p,{children:"description: In order to verify an email address a key is mailed identifying the\nemail address to be verified. In previous versions, a record was\nstored in the database for each ongoing email confirmation, keeping\ntrack of these keys. Current versions use HMAC based keys that do not\nrequire server side state."}),"\n",(0,s.jsx)(n.h2,{id:"account_email_notifications",children:(0,s.jsx)(n.code,{children:"ACCOUNT_EMAIL_NOTIFICATIONS"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"False"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"bool"})]}),"\n",(0,s.jsx)(n.p,{children:'description: When enabled, account related security notifications, such as "Your password\nwas changed", including information on user agent / IP address from where the\nchange originated, will be emailed.'}),"\n",(0,s.jsx)(n.h2,{id:"account_email_required",children:(0,s.jsx)(n.code,{children:"ACCOUNT_EMAIL_REQUIRED"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"False"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"bool"})]}),"\n",(0,s.jsx)(n.p,{children:"description: The user is required to hand over an email address when signing up."}),"\n",(0,s.jsx)(n.h2,{id:"account_email_verification",children:(0,s.jsx)(n.code,{children:"ACCOUNT_EMAIL_VERIFICATION"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:'"optional"'})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"str"})]}),"\n",(0,s.jsxs)(n.p,{children:["description: Determines the email verification method during signup -- choose\none of ",(0,s.jsx)(n.code,{children:'"mandatory"'}),", ",(0,s.jsx)(n.code,{children:'"optional"'}),", or ",(0,s.jsx)(n.code,{children:'"none"'}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Setting this to ",(0,s.jsx)(n.code,{children:'"mandatory"'})," requires ",(0,s.jsx)(n.code,{children:"ACCOUNT_EMAIL_REQUIRED"})," to be ",(0,s.jsx)(n.code,{children:"True"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["When set to ",(0,s.jsx)(n.code,{children:'"mandatory"'})," the user is blocked from logging in until the email\naddress is verified. Choose ",(0,s.jsx)(n.code,{children:'"optional"'})," or ",(0,s.jsx)(n.code,{children:'"none"'})," to allow logins\nwith an unverified email address. In case of ",(0,s.jsx)(n.code,{children:'"optional"'}),', the email\nverification mail is still sent, whereas in case of "none" no email\nverification mails are sent.']}),"\n",(0,s.jsx)(n.h2,{id:"account_email_subject_prefix",children:(0,s.jsx)(n.code,{children:"ACCOUNT_EMAIL_SUBJECT_PREFIX"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:'"[Site] "'})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"str"})]}),"\n",(0,s.jsxs)(n.p,{children:["description: Subject-line prefix to use for email messages sent. By default, the\nname of the current ",(0,s.jsx)(n.code,{children:"Site"})," (",(0,s.jsx)(n.code,{children:"django.contrib.sites"}),") is used."]}),"\n",(0,s.jsx)(n.h2,{id:"account_email_max_length",children:(0,s.jsx)(n.code,{children:"ACCOUNT_EMAIL_MAX_LENGTH"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"254"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"int"})]}),"\n",(0,s.jsxs)(n.p,{children:["description: Maximum length of the email field. You won't need to alter this unless using\nMySQL with the InnoDB storage engine and the ",(0,s.jsx)(n.code,{children:"utf8mb4"})," charset, and only in\nversions lower than 5.7.7, because the default InnoDB settings don't allow\nindexes bigger than 767 bytes. When using ",(0,s.jsx)(n.code,{children:"utf8mb4"}),", characters are 4-bytes\nwide, so at maximum column indexes can be 191 characters long (767/4).\nUnfortunately Django doesn't allow specifying index lengths, so the solution\nis to reduce the length in characters of indexed text fields.\nMore information can be found at ",(0,s.jsx)(n.a,{href:"https://dev.mysql.com/doc/refman/5.5/en/charset-unicode-conversion.html",children:"MySQL's documentation on converting between 3-byte and 4-byte Unicode character sets"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"account_max_email_addresses",children:(0,s.jsx)(n.code,{children:"ACCOUNT_MAX_EMAIL_ADDRESSES"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"None"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"int | None"})]}),"\n",(0,s.jsx)(n.p,{children:"description: The maximum amount of email addresses a user can associate to his account. It\nis safe to change this setting for an already running project -- it will not\nnegatively affect users that already exceed the allowed amount. Note that if\nyou set the maximum to 1, users will not be able to change their email\naddress."}),"\n",(0,s.jsx)(n.h2,{id:"account_logout_on_password_change",children:(0,s.jsx)(n.code,{children:"ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"False"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"bool"})]}),"\n",(0,s.jsxs)(n.p,{children:["description: Determines whether or not the user is automatically logged out after\nchanging or setting their password. See documentation for\n",(0,s.jsx)(n.a,{href:"https://docs.djangoproject.com/en/stable/topics/auth/default/#session-invalidation-on-password-change",children:"Django's session invalidation on password change"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Not implemented yet"})}),"\n",(0,s.jsx)(n.h2,{id:"account_login_on_password_reset",children:(0,s.jsx)(n.code,{children:"ACCOUNT_LOGIN_ON_PASSWORD_RESET"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"False"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"bool"})]}),"\n",(0,s.jsxs)(n.p,{children:["description: By changing this setting to ",(0,s.jsx)(n.code,{children:"True"}),", users will automatically be logged in\nonce they have reset their password. By default they are redirected to the\npassword reset done page."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Not implemented yet"})}),"\n",(0,s.jsx)(n.h2,{id:"account_logout_redirect_url",children:(0,s.jsx)(n.code,{children:"ACCOUNT_LOGOUT_REDIRECT_URL"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:'settings.LOGOUT_REDIRECT_URL or "/"'})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"str"})]}),"\n",(0,s.jsxs)(n.p,{children:["description: The URL (or URL name) to return to after the user logs out. Defaults to\nDjango's ",(0,s.jsx)(n.code,{children:"LOGOUT_REDIRECT_URL"}),", unless that is empty, then ",(0,s.jsx)(n.code,{children:'"/"'})," is used."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Not implemented yet"})}),"\n",(0,s.jsx)(n.h2,{id:"account_password_reset_token_generator",children:(0,s.jsx)(n.code,{children:"ACCOUNT_PASSWORD_RESET_TOKEN_GENERATOR"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:'"allauth.account.forms.EmailAwarePasswordResetTokenGenerator"'})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"str"})]}),"\n",(0,s.jsxs)(n.p,{children:["description: A string pointing to a custom token generator\n(e.g. 'myapp.auth.CustomTokenGenerator') for password resets. This class\nshould implement the same methods as\n",(0,s.jsx)(n.code,{children:"django.contrib.auth.tokens.PasswordResetTokenGenerator"})," or subclass it."]}),"\n",(0,s.jsx)(n.h2,{id:"account_preserve_username_casing",children:(0,s.jsx)(n.code,{children:"ACCOUNT_PRESERVE_USERNAME_CASING"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"True"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"bool"})]}),"\n",(0,s.jsxs)(n.p,{children:["description: This setting determines whether the username is stored in lowercase\n(",(0,s.jsx)(n.code,{children:"False"}),") or whether its casing is to be preserved (",(0,s.jsx)(n.code,{children:"True"}),"). Note that when\ncasing is preserved, potentially expensive ",(0,s.jsx)(n.code,{children:"__iexact"})," lookups are performed\nwhen filter on username. For now, the default is set to ",(0,s.jsx)(n.code,{children:"True"})," to maintain\nbackwards compatibility."]}),"\n",(0,s.jsx)(n.h2,{id:"account_prevent_enumeration",children:(0,s.jsx)(n.code,{children:"ACCOUNT_PREVENT_ENUMERATION"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"True"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"bool"})]}),"\n",(0,s.jsx)(n.p,{children:"description: Controls whether or not information is revealed about whether or not a user\naccount exists. For example, by entering random email addresses in the\npassword reset form you can test whether or not those email addresses are\nassociated with an account. Enabling this setting prevents that, and an email\nis always sent, regardless of whether or not the account exists. Note that\nthere is a slight usability tax to pay because there is no immediate feedback."}),"\n",(0,s.jsxs)(n.p,{children:["Whether or not enumeration can be prevented during signup depends on the email\nverification method. In case of mandatory verification, enumeration can be\nproperly prevented because the case where an email address is already taken is\nindistinguishable from the case where it is not. However, in case of optional\nor disabled email verification, enumeration can only be prevented by allowing\nthe signup to go through, resulting in multiple accounts sharing same email\naddress (although only one of the accounts can ever have it verified). When\nenumeration is set to ",(0,s.jsx)(n.code,{children:"True"}),", email address uniqueness takes precedence over\nenumeration prevention, and the issue of multiple accounts having the same\nemail address will be avoided, thus leaking information. Set it to\n",(0,s.jsx)(n.code,{children:'"strict"'})," to allow for signups to go through."]}),"\n",(0,s.jsx)(n.h2,{id:"account_rate_limits",children:(0,s.jsx)(n.code,{children:"ACCOUNT_RATE_LIMITS"})}),"\n",(0,s.jsx)(n.p,{children:"default:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'ACCOUNT_RATE_LIMITS = {\n    # Change password view (for users already logged in)\n    "change_password": "5/m",\n    # Email management (e.g. add, remove, change primary)\n    "manage_email": "10/m",\n    # Request a password reset, global rate limit per IP\n    "reset_password": "20/m",\n    # Rate limit measured per individual email address\n    "reset_password_email": "5/m",\n    # Password reset (the view the password reset email links to).\n    "reset_password_from_key": "20/m",\n    # Signups.\n    "signup": "20/m",\n    # NOTE: Login is already protected via `ACCOUNT_LOGIN_ATTEMPTS_LIMIT`\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"dict"})]}),"\n",(0,s.jsxs)(n.p,{children:["description: In order to be secure out of the box various rate limits are in place. The rate limit mechanism is backed by a Django cache. Hence, rate limiting will not work properly if you are using the DummyCache. To disable, set to ",(0,s.jsx)(n.code,{children:"{}"}),". When rate limits are hit the 429.html template is rendered."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Not implemented yet"})}),"\n",(0,s.jsx)(n.h2,{id:"account_reauthentication_timeout",children:(0,s.jsx)(n.code,{children:"ACCOUNT_REAUTHENTICATION_TIMEOUT"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"300"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"int"})]}),"\n",(0,s.jsx)(n.p,{children:"description: Before asking the user to reauthenticate, we check if a successful\n(re)authentication happened within the amount of seconds specified here, and\nif that is the case, the new reauthentication flow is silently skipped."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Not implemented yet"})}),"\n",(0,s.jsx)(n.h2,{id:"account_username_blacklist",children:(0,s.jsx)(n.code,{children:"ACCOUNT_USERNAME_BLACKLIST"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"[]"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"List[str]"})]}),"\n",(0,s.jsx)(n.p,{children:"description: A list of usernames that can't be used by user."}),"\n",(0,s.jsx)(n.h2,{id:"account_unique_email",children:(0,s.jsx)(n.code,{children:"ACCOUNT_UNIQUE_EMAIL"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"True"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"bool"})]}),"\n",(0,s.jsx)(n.p,{children:"description: Enforce uniqueness of email addresses. On the database level, this implies\nthat only one user account can have an email address marked as verified.\nForms prevent a user from registering with or adding an additional email\naddress if that email address is in use by another account."}),"\n",(0,s.jsx)(n.h2,{id:"account_user_display",children:(0,s.jsx)(n.code,{children:"ACCOUNT_USER_DISPLAY"})}),"\n",(0,s.jsxs)(n.p,{children:["default: a callable returning ",(0,s.jsx)(n.code,{children:"user.username"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"callable"})]}),"\n",(0,s.jsxs)(n.p,{children:["description: A callable (or string of the form ",(0,s.jsx)(n.code,{children:"'some.module.callable_name'"}),")\nthat takes a user as its only argument and returns the display name\nof the user. The default implementation returns ",(0,s.jsx)(n.code,{children:"user.username"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"account_user_model_email_field",children:(0,s.jsx)(n.code,{children:"ACCOUNT_USER_MODEL_EMAIL_FIELD"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:'"email"'})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"str"})]}),"\n",(0,s.jsxs)(n.p,{children:["description: The name of the field containing the ",(0,s.jsx)(n.code,{children:"email"}),", if any. See custom\nuser models."]}),"\n",(0,s.jsx)(n.h2,{id:"account_user_model_username_field",children:(0,s.jsx)(n.code,{children:"ACCOUNT_USER_MODEL_USERNAME_FIELD"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:'"username"'})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"str"})]}),"\n",(0,s.jsxs)(n.p,{children:["description: The name of the field containing the ",(0,s.jsx)(n.code,{children:"username"}),", if any. See custom\nuser models."]}),"\n",(0,s.jsx)(n.h2,{id:"account_username_min_length",children:(0,s.jsx)(n.code,{children:"ACCOUNT_USERNAME_MIN_LENGTH"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"1"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"int"})]}),"\n",(0,s.jsx)(n.p,{children:"description: An integer specifying the minimum allowed length of a username."}),"\n",(0,s.jsx)(n.h2,{id:"account_username_validators",children:(0,s.jsx)(n.code,{children:"ACCOUNT_USERNAME_VALIDATORS"})}),"\n",(0,s.jsxs)(n.p,{children:["default: ",(0,s.jsx)(n.code,{children:"None"})]}),"\n",(0,s.jsxs)(n.p,{children:["type: ",(0,s.jsx)(n.code,{children:"List[str] | None"})]}),"\n",(0,s.jsxs)(n.p,{children:["description: A path\n(",(0,s.jsx)(n.code,{children:"'some.module.validators.custom_username_validators'"}),") to a list of\ncustom username validators. If left unset, the validators setup\nwithin the user model username field are used."]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"    # In validators.py\n\n    from django.contrib.auth.validators import ASCIIUsernameValidator\n\n    custom_username_validators = [ASCIIUsernameValidator()]\n\n    # In settings.py\n\n    ACCOUNT_USERNAME_VALIDATORS = 'some.module.validators.custom_username_validators'\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var s=i(6540);const t={},a=s.createContext(t);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);