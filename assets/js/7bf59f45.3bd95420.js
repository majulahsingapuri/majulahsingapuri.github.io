"use strict";(self.webpackChunkmajulahsingapuri_github_io=self.webpackChunkmajulahsingapuri_github_io||[]).push([[5847],{6686:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>c,toc:()=>o});var n=i(4848),s=i(8453);const d={id:"settings-jwt",title:"JWT",description:"Different Settings for Dj-Ninja-Auth",sidebar_position:4,sidebar_label:"JWT",keywords:["settings","dj-ninja-auth"],image:"https://github.com/majulahsingapuri.png",tags:["dj-ninja-auth","settings"],slug:"jwt",draft:!1},a=void 0,c={id:"settings/settings-jwt",title:"JWT",description:"Different Settings for Dj-Ninja-Auth",source:"@site/ninja-auth/settings/settings-jwt.md",sourceDirName:"settings",slug:"/settings/jwt",permalink:"/ninja-auth/settings/jwt",draft:!1,unlisted:!1,tags:[{inline:!0,label:"dj-ninja-auth",permalink:"/ninja-auth/tags/dj-ninja-auth"},{inline:!0,label:"settings",permalink:"/ninja-auth/tags/settings"}],version:"current",sidebarPosition:4,frontMatter:{id:"settings-jwt",title:"JWT",description:"Different Settings for Dj-Ninja-Auth",sidebar_position:4,sidebar_label:"JWT",keywords:["settings","dj-ninja-auth"],image:"https://github.com/majulahsingapuri.png",tags:["dj-ninja-auth","settings"],slug:"jwt",draft:!1},sidebar:"tutorialSidebar",previous:{title:"Token",permalink:"/ninja-auth/settings/token"},next:{title:"Allauth",permalink:"/ninja-auth/settings/allauth"}},l={},o=[{value:"<code>AUTH_JWT_VERIFY_SCHEMA</code>",id:"auth_jwt_verify_schema",level:2},{value:"<code>AUTH_JWT_PAIR_SCHEMA</code>",id:"auth_jwt_pair_schema",level:2},{value:"<code>AUTH_JWT_REFRESH_SCHEMA</code>",id:"auth_jwt_refresh_schema",level:2},{value:"<code>AUTH_JWT_TOKEN_CLASSES</code>",id:"auth_jwt_token_classes",level:2},{value:"<code>AUTH_JWT_USER_ID_CLAIM</code>",id:"auth_jwt_user_id_claim",level:2},{value:"<code>AUTH_JWT_USER_ID_FIELD</code>",id:"auth_jwt_user_id_field",level:2},{value:"<code>AUTH_JWT_JTI_CLAIM</code>",id:"auth_jwt_jti_claim",level:2},{value:"<code>AUTH_JWT_TOKEN_TYPE_CLAIM</code>",id:"auth_jwt_token_type_claim",level:2},{value:"<code>AUTH_JWT_USER_AUTHENTICATION_RULE</code>",id:"auth_jwt_user_authentication_rule",level:2},{value:"<code>AUTH_JWT_LEEWAY</code>",id:"auth_jwt_leeway",level:2},{value:"<code>AUTH_JWT_JWK_URL</code>",id:"auth_jwt_jwk_url",level:2},{value:"<code>AUTH_JWT_ISSUER</code>",id:"auth_jwt_issuer",level:2},{value:"<code>AUTH_JWT_AUDIENCE</code>",id:"auth_jwt_audience",level:2},{value:"<code>AUTH_JWT_VERIFYING_KEY</code>",id:"auth_jwt_verifying_key",level:2},{value:"<code>AUTH_JWT_SIGNING_KEY</code>",id:"auth_jwt_signing_key",level:2},{value:"<code>AUTH_JWT_ALGORITHM</code>",id:"auth_jwt_algorithm",level:2},{value:"<code>AUTH_JWT_UPDATE_LAST_LOGIN</code>",id:"auth_jwt_update_last_login",level:2},{value:"<code>AUTH_JWT_ACCESS_TOKEN_LIFETIME</code>",id:"auth_jwt_access_token_lifetime",level:2},{value:"<code>AUTH_JWT_REFRESH_TOKEN_LIFETIME</code>",id:"auth_jwt_refresh_token_lifetime",level:2}];function r(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"auth_jwt_verify_schema",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_VERIFY_SCHEMA"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:'"dj_ninja_auth.jwt.schema.TokenVerifyInputSchema"'})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"str"})]}),"\n",(0,n.jsx)(t.p,{children:"description: This schema verifies the provided Token."}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_pair_schema",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_PAIR_SCHEMA"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:'"dj_ninja_auth.jwt.schema.TokenPairInputSchema"'})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"str"})]}),"\n",(0,n.jsxs)(t.p,{children:["description: This schema requests a username and password and returns an ",(0,n.jsx)(t.code,{children:"acccess"})," and ",(0,n.jsx)(t.code,{children:"refresh"})," tokens."]}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_refresh_schema",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_REFRESH_SCHEMA"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:'"dj_ninja_auth.jwt.schema.TokenRefreshInputSchema"'})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"str"})]}),"\n",(0,n.jsxs)(t.p,{children:["description: This schema requests a ",(0,n.jsx)(t.code,{children:"refresh"})," token and returns a new ",(0,n.jsx)(t.code,{children:"access"})," and ",(0,n.jsx)(t.code,{children:"refresh"})," token."]}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_token_classes",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_TOKEN_CLASSES"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:'("dj_ninja_auth.jwt.tokens.AccessToken",)'})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"Tuple[str]"})]}),"\n",(0,n.jsx)(t.p,{children:"description: A list of dot paths to classes that specify the types of token that are allowed to prove authentication."}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_user_id_claim",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_USER_ID_CLAIM"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:'"user_id"'})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"str"})]}),"\n",(0,n.jsxs)(t.p,{children:["description: The claim in generated tokens which will be used to store user identifiers. For example, a setting value of ",(0,n.jsx)(t.code,{children:"'user_id'"}),' would mean generated tokens include a "user_id" claim that contains the user\'s identifier.']}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_user_id_field",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_USER_ID_FIELD"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:'"id"'})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"str"})]}),"\n",(0,n.jsx)(t.p,{children:'description: The database field from the user model that will be included in generated tokens to identify users. It is recommended that the value of this setting specifies a field that does not normally change once its initial value is chosen. For example, specifying a "username" or "email" field would be a poor choice since an account\'s username or email might change depending on how account management in a given service is designed. This could allow a new account to be created with an old username while an existing token is still valid which uses that username as a user identifier.'}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_jti_claim",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_JTI_CLAIM"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:'"jti"'})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"str"})]}),"\n",(0,n.jsx)(t.p,{children:'description: The claim name that is used to store a token\'s unique identifier. It may be necessary in some cases to use another claim besides the default "jti" claim to store such a value.'}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_token_type_claim",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_TOKEN_TYPE_CLAIM"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:'"token_type"'})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"str"})]}),"\n",(0,n.jsx)(t.p,{children:"description: The claim name that is used to store a token's type."}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_user_authentication_rule",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_USER_AUTHENTICATION_RULE"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:'"dj_ninja_auth.jwt.authentication.default_authentication_rule"'})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"str"})]}),"\n",(0,n.jsx)(t.p,{children:"description: Callable to determine if the user is permitted to authenticate. This rule is applied after a valid token is processed. The user object is passed to the callable as an argument. The default rule is to check that the is_active flag is still True. The callable must return a boolean, True if authorized, False otherwise resulting in a 401 status code."}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_leeway",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_LEEWAY"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:"0"})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"Union[int, datetime.timedelta]"})]}),"\n",(0,n.jsxs)(t.p,{children:["description: Leeway is used to give some margin to the expiration time. This can be an integer for seconds or a ",(0,n.jsx)(t.code,{children:"datetime.timedelta"}),". Please reference ",(0,n.jsx)(t.a,{href:"https://pyjwt.readthedocs.io/en/latest/usage.html#expiration-time-claim-exp",children:"pyjwt docs"})," for more information."]}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_jwk_url",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_JWK_URL"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:"None"})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"str | None"})]}),"\n",(0,n.jsxs)(t.p,{children:["description: The JWK_URL is used to dynamically resolve the public keys needed to verify the signing of tokens. When using Auth0 for example you might set this to ",(0,n.jsx)(t.code,{children:"https://yourdomain.auth0.com/.well-known/jwks.json"}),". When set to None, this field is excluded from the token backend and is not used during validation."]}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_issuer",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_ISSUER"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:"None"})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"str | None"})]}),"\n",(0,n.jsxs)(t.p,{children:["description: The issuer claim to be included in generated tokens and/or validated in decoded tokens. When set to ",(0,n.jsx)(t.code,{children:"None"}),", this field is excluded from tokens and is not validated."]}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_audience",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_AUDIENCE"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:"None"})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"str | None"})]}),"\n",(0,n.jsxs)(t.p,{children:["description: The audience claim to be included in generated tokens and/or validated in decoded tokens. When set to ",(0,n.jsx)(t.code,{children:"None"}),", this field is excluded from tokens and is not validated."]}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_verifying_key",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_VERIFYING_KEY"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:"None"})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"str | None"})]}),"\n",(0,n.jsxs)(t.p,{children:["description: The verifying key which is used to verify the content of generated tokens. If an HMAC algorithm has been specified by the ",(0,n.jsx)(t.code,{children:"ALGORITHM"})," setting, the ",(0,n.jsx)(t.code,{children:"VERIFYING_KEY"})," setting will be ignored and the value of the ",(0,n.jsx)(t.code,{children:"SIGNING_KEY"})," setting will be used. If an RSA algorithm has been specified by the ",(0,n.jsx)(t.code,{children:"ALGORITHM"})," setting, the ",(0,n.jsx)(t.code,{children:"VERIFYING_KEY"})," setting must be set to a string that contains an RSA public key."]}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_signing_key",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_SIGNING_KEY"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:"settings.SECRET_KEY"})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"str"})]}),"\n",(0,n.jsxs)(t.p,{children:["description: The signing key that is used to sign the content of generated tokens. For HMAC signing, this should be a random string with at least as many bits of data as is required by the signing protocol. For RSA signing, this should be a string that contains an RSA private key that is 2048 bits or longer. Since Simple JWT defaults to using 256-bit HMAC signing, the ",(0,n.jsx)(t.code,{children:"SIGNING_KEY"})," setting defaults to the value of the ",(0,n.jsx)(t.code,{children:"SECRET_KEY"})," setting for your django project. Although this is the most reasonable default that Simple JWT can provide, it is recommended that developers change this setting to a value that is independent from the django project secret key. This will make changing the signing key used for tokens easier in the event that it is compromised."]}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_algorithm",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_ALGORITHM"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:'"HS256"'})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"str"})]}),"\n",(0,n.jsxs)(t.p,{children:["description: The algorithm from the PyJWT library which will be used to perform signing/verification operations on tokens. To use symmetric HMAC signing and verification, the following algorithms may be used: ",(0,n.jsx)(t.code,{children:"'HS256'"}),", ",(0,n.jsx)(t.code,{children:"'HS384'"}),", ",(0,n.jsx)(t.code,{children:"'HS512'"}),". When an HMAC algorithm is chosen, the ",(0,n.jsx)(t.code,{children:"SIGNING_KEY"})," setting will be used as both the signing key and the verifying key. In that case, the ",(0,n.jsx)(t.code,{children:"VERIFYING_KEY"})," setting will be ignored. To use asymmetric RSA signing and verification, the following algorithms may be used: ",(0,n.jsx)(t.code,{children:"'RS256'"}),", ",(0,n.jsx)(t.code,{children:"'RS384'"}),", ",(0,n.jsx)(t.code,{children:"'RS512'"}),". When an RSA algorithm is chosen, the ",(0,n.jsx)(t.code,{children:"SIGNING_KEY"})," setting must be set to a string that contains an RSA private key. Likewise, the ",(0,n.jsx)(t.code,{children:"VERIFYING_KEY"})," setting must be set to a string that contains an RSA public key."]}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_update_last_login",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_UPDATE_LAST_LOGIN"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:"False"})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"bool"})]}),"\n",(0,n.jsxs)(t.p,{children:["description: When set to ",(0,n.jsx)(t.code,{children:"True"}),", last_login field in the auth_user table is updated upon login."]}),"\n",(0,n.jsx)(t.admonition,{type:"warning",children:(0,n.jsx)(t.p,{children:"Updating last_login will dramatically increase the number of database\ntransactions. People abusing the views could slow the server and this could be\na security vulnerability. If you really want this, throttle the endpoint with\nDRF at the very least."})}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_access_token_lifetime",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_ACCESS_TOKEN_LIFETIME"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:"timedelta(minutes=5)"})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"timedelta"})]}),"\n",(0,n.jsxs)(t.p,{children:["description: A ",(0,n.jsx)(t.code,{children:"datetime.timedelta"})," object which specifies how long access tokens are valid. This ",(0,n.jsx)(t.code,{children:"timedelta"})," value is added to the current UTC time during token generation to obtain the token's default ",(0,n.jsx)(t.code,{children:"exp"})," claim value."]}),"\n",(0,n.jsx)(t.h2,{id:"auth_jwt_refresh_token_lifetime",children:(0,n.jsx)(t.code,{children:"AUTH_JWT_REFRESH_TOKEN_LIFETIME"})}),"\n",(0,n.jsxs)(t.p,{children:["default: ",(0,n.jsx)(t.code,{children:"timedelta(days=1)"})]}),"\n",(0,n.jsxs)(t.p,{children:["type: ",(0,n.jsx)(t.code,{children:"timedelta"})]}),"\n",(0,n.jsxs)(t.p,{children:["description: A ",(0,n.jsx)(t.code,{children:"datetime.timedelta"})," object which specifies how long refresh tokens are valid. This ",(0,n.jsx)(t.code,{children:"timedelta"})," value is added to the current UTC time during token generation to obtain the token's default ",(0,n.jsx)(t.code,{children:"exp"})," claim value."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(r,{...e})}):r(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>c});var n=i(6540);const s={},d=n.createContext(s);function a(e){const t=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(d.Provider,{value:t},e.children)}}}]);